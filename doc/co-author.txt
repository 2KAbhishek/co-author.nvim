*co-author.txt*         For Neovim >= 0.8.0         Last change: 2025 March 09

==============================================================================
Table of Contents                                *co-author-table-of-contents*

  - What is this                                      |co-author-what-is-this|
  - Inspiration                                        |co-author-inspiration|
  - Prerequisites                                    |co-author-prerequisites|
  - Installing co-author.nvim            |co-author-installing-co-author.nvim|
  - Using co-author.nvim                      |co-author-using-co-author.nvim|
  - How it was built                              |co-author-how-it-was-built|
  - Challenges faced                              |co-author-challenges-faced|
  - What I learned                                  |co-author-what-i-learned|
  - What’s next                                    |co-author-what’s-next|
  - More Info                                            |co-author-more-info|


WHAT IS THIS                                          *co-author-what-is-this*

How many times have you been pairing on a feature and then when committing you
had to manually paste their details for adding a Co-author to the commit?

This plugin automatically fetches author details from the repo’s commit
history and then adds it to your commit message.

It shows you a list of all the unique authors in your current repo on a nice
fuzzy searchable list.

`co-author.nvim` automatically works with configured pickers and presents the
list in a fuzzy searchable UI.

Here’s a demo video <https://youtu.be/mBLLyOLwSf4?si=2Bdw900ROLp63LEg> for a
quick walk-through.


INSPIRATION                                            *co-author-inspiration*

Noticed something similar on a co-workers using IntelliJ, and I wanted it!


PREREQUISITES                                        *co-author-prerequisites*

Before you begin, ensure you have met the following requirements:

- You have installed the latest version of `neovim`

These two plugins are optional but highly recommended for a smoother user
experience.

- snacks.nvim picker <https://github.com/folke/snacks.nvim/blob/main/docs/picker.md> — for prettier select UI


INSTALLING CO-AUTHOR.NVIM                *co-author-installing-co-author.nvim*

To get co-author.nvim, add the following to your plugin list:

>lua
    -- Lazy
    {
        '2kabhishek/co-author.nvim',
        dependencies = {
            'folke/snacks.nvim',
        },
        cmd = {'CoAuthor'},
    },
    
    -- Packer
    use '2kabhishek/co-author.nvim'
<


USING CO-AUTHOR.NVIM                          *co-author-using-co-author.nvim*

`co-author.nvim` adds a `:CoAuthor` command that will show you the list of
unique co authors who have already contributed to the current git repo.

You can add your custom bindings for the command `:CoAuthor`, the recommended
keybinding is `<leader>gC`.

check `:help co-author` for more details.


  NOTE: By default there are no configured keybindings.

HOW IT WAS BUILT                                  *co-author-how-it-was-built*

co-author.nvim was built using `neovim, lua`


CHALLENGES FACED                                  *co-author-challenges-faced*

Figuring out vim’s rtp was tricky initially.


WHAT I LEARNED                                      *co-author-what-i-learned*

- Learned about nvim plugin ecosystem
- Explored vim APIs


WHAT’S NEXT                                        *co-author-what’s-next*

You tell me!

Hit the button if you found this useful.


MORE INFO                                                *co-author-more-info*


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
